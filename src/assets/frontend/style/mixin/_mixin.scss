@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin responsive-ratio($x,$y, $pseudo: true) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin responsive-padding($x,$y, $pseudo: true){
    $padding: unquote( ( $y / $x ) * (100/2) + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
        &:after {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin media($media){
    @if $media == xs-dn {
        @media($max : $xs){ @content; }
    }
    @else if $media == xs-up {
        @media($min : $xs + 1px) { @content; }
    }
    @else if $media == sm-dn {
        @media($max : $sm) { @content; }
    }
    @else if $media == sm-up {
        @media($min : $sm + 1px) { @content; }
    }
    @else if $media == md-dn {
        @media($max : $md) { @content; }
    }
    @else if $media == md-up {
        @media($min : $md + 1px) { @content; }
    }
    @else if $media == dp-dn {
        @media($max : $dp) { @content; }
    }
    @else if $media == dp-up {
        @media($min : $dp + 1px) { @content; }
    }
    @else if $media == hd-dn {
        @media($max : $hd) { @content; }
    }
    @else if $media == hd-up {
        @media($min : $hd + 1px) { @content; }
    }
    @else if $media == xs-sm {
        @media($max : $sm) and ($min : $xs) { @content; }
    }
    @else if $media == xs-md {
        @media($max : $md) and ($min : $xs) { @content; }
    }
    @else if $media == xs-dp {
        @media($max : $dp) and ($min : $xs) { @content; }
    }
    @else if $media == xs-hd {
        @media($max : $hd) and ($min : $xs) { @content; }
    }
    @else if $media == sm-md {
        @media($max : $md) and ($min : $sm) { @content; }
    }
    @else if $media == sm-dp {
        @media($max : $dp) and ($min : $sm) { @content; }
    }
    @else if $media == sm-hd {
        @media($max : $hd) and ($min : $sm) { @content; }
    }
    @else if $media == md-dp {
        @media($max : $dp) and ($min : $md) { @content; }
    }
    @else if $media == md-hd {
        @media($max : $hd) and ($min : $md) { @content; }
    }
    @else if $media == dp-hd {
        @media($max : $hd) and ($min : $dp) { @content; }
    }
}

@mixin clearfix{
    &::after{
        content: '';
        clear: both;
        display: table;
    }
}

@mixin zindex($num){
    z-index: $num;
}

@mixin trans-prop($property...) {
    transition-property: $property;
}

$browser-context: 16;
$line-height: 24;

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@function rem($pixels, $context: $browser-context) {
  @return #{$pixels/$context}rem;
}

@mixin fs($px){
    font-size: em($px);
    @include trans-prop(font-size)
}

@mixin widthPercent($width, $contWidth){
    width: #{($width/$contWidth)*100%};
}

@mixin ellipsis($width: 100%, $display: inline-block){
    display: $display;
    max-width: $width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal
}

@mixin hide-text{
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}

@mixin border($color, $opacity: 1){
    border-color: rgba($color, $opacity);
}

@mixin background($color, $opacity: 1){
    background-color: rgba($color, $opacity);
}

@mixin color($color, $opacity: 1){
    color: rgba($color, $opacity);
}

@mixin background-property($repeat: no-repeat, $size: cover, $position: center){
    background-repeat: $repeat;
    background-size: $size;
    background-position: $position;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        box-shadow:inset $top $left $blur $color;
    } @else {
        box-shadow: $top $left $blur $color;
    }
}

@mixin rounded($radius: 0.5em) {
  border-radius: $radius;
}

@mixin gradient($color, $white: false, $deg: 145deg, $opacity: 1){
    @if $white {
        background-color: rgba($color, $opacity);
        background-image: linear-gradient($deg, rgba($white, 0), rgba($white, .25));
    } @else {
        background-color: rgba($color, $opacity);
        background-image: linear-gradient($deg, rgba($black, 0), rgba($black, .25));
    }
}

@mixin weight($weight) {
    font-weight: $weight;
}
